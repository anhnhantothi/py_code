// File: src/components/ChatReviewModal.tsx
import { Modal, Button, Spin } from 'antd';
import { useEffect, useState } from 'react';
import { useAIChat } from './useAIChat';
import axios from 'axios';
import { API_BASE } from '../config';
import { useToast } from '../contexts/ToastContext';

const token = localStorage.getItem('token');

interface ChatReviewModalProps {
  visible: boolean;
  code: string;
  description: string;
  sampleAnswer?: string;
  slug: string;
  onClose: () => void;
  onUsedAI?: () => void; // Optional: reload h·ªì s∆° sau khi d√πng AI
}

export default function ChatReviewModal({
  visible,
  code,
  description,
  sampleAnswer,
  slug,
  onClose,
  onUsedAI
}: ChatReviewModalProps) {
  const toast = useToast();
  const [score, setScore] = useState<number | null>(null);

  const prompt = `B·∫°n l√† gi√°o vi√™n Python, h√£y ƒë√°nh gi√° ƒëo·∫°n m√£ h·ªçc sinh vi·∫øt cho y√™u c·∫ßu sau:

ƒê·ªÅ b√†i:
${description}

M√£ c·ªßa h·ªçc sinh:
\`\`\`python
${code}
\`\`\`

üéØ ƒê√°p √°n m·∫´u (n·∫øu c√≥):
${sampleAnswer || 'Kh√¥ng c√≥'}

H√£y tr·∫£ l·ªùi v·ªõi:
- M√£ ƒë√∫ng hay sai
- Gi·∫£i th√≠ch ng·∫Øn
- Cho ƒëi·ªÉm t·ª´ 0‚Äì10
- ‚úçÔ∏è G·ª£i √Ω ng·∫Øn c·∫£i thi·ªán n·∫øu c·∫ßn
`;

  const messages = [
    { role: 'system', content: 'B·∫°n l√† gi√°o vi√™n Python ch·∫•m b√†i h·ªçc sinh.' },
    { role: 'user', content: prompt }
  ];

  // ‚úÖ G·ªçi AI ngay khi visible
  const { loading, response } = useAIChat(visible, messages);

  // ‚úÖ Ghi nh·∫≠n l∆∞·ª£t s·ª≠ d·ª•ng AI sau khi c√≥ ph·∫£n h·ªìi
  useEffect(() => {
    if (!visible || !response) return;

    axios.post(`${API_BASE}/api/use-chat`, {}, {
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    }).then(() => {
      window.dispatchEvent(new Event('ai-used'));
      onUsedAI?.();
    }).catch((err) => {
      console.error('‚ùå L·ªói khi ghi nh·∫≠n l∆∞·ª£t s·ª≠ d·ª•ng AI:', err);
      toast.showWarn("‚ö†Ô∏è L∆∞·ª£t s·ª≠ d·ª•ng kh√¥ng ƒë∆∞·ª£c ghi nh·∫≠n.");
    });
  }, [visible, response]);

  // ‚úÖ G·ª≠i ƒëi·ªÉm khi AI ƒë√£ ph·∫£n h·ªìi
  useEffect(() => {
    if (!visible || !response) return;

    const match = response.match(/ƒêi·ªÉm:\s*(\d+)/);
    const extractedScore = match ? parseInt(match[1], 10) : null;

    if (
      extractedScore !== null &&
      extractedScore >= 0 &&
      extractedScore <= 10
    ) {
      setScore(extractedScore);

      axios.post(`${API_BASE}/api/practices/submit`, {
        slug,
        code,
        score: extractedScore
      }, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).catch((err) => {
        console.error('‚ùå L·ªói khi l∆∞u k·∫øt qu·∫£:', err);
      });
    }
  }, [response]);

  return (
    <Modal
      open={visible}
      title="üìù Ph·∫£n h·ªìi t·ª´ AI"
      onCancel={onClose}
      footer={[<Button key="close" onClick={onClose}>ƒê√≥ng</Button>]}
      width={700}
    >
      {loading ? (
        <div className="text-center"><Spin /></div>
      ) : (
        <pre className="p-4 bg-gray-100 rounded whitespace-pre-wrap font-mono">
          {response || 'Ch∆∞a c√≥ ph·∫£n h·ªìi.'}
        </pre>
      )}
    </Modal>
  );
}
